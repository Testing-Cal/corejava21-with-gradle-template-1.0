plugins {
	id 'java'
	id 'org.sonarqube' version '5.0.0.4638'
	id 'jacoco'
}

sonarqube {
	properties {
		property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
		property "sonar.junit.reportPaths", "${project.buildDir}/test-results/test"
		property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/test-results/test"
	}
}

jacocoTestReport {
	reports {
		xml.required = true
		html.required = true
		csv.required = false
	}
}

group 'com.template.demo'
version '1.0-SNAPSHOT'
sourceCompatibility = '21'
targetCompatibility = '21'

repositories {
	mavenCentral()
}

dependencies {
	//testImplementation group: 'junit', name: 'junit', version: '4.12'
	implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: '10.1.5'
	implementation group: 'org.apache.tomcat', name: 'tomcat-jasper-el', version: '10.1.5'
	implementation group: 'org.apache.tomcat', name: 'tomcat-jsp-api', version: '10.1.5'
	implementation group: 'org.apache.tomcat', name: 'tomcat-jasper', version: '10.1.5'
	implementation group: 'jakarta.servlet', name: 'jakarta.servlet-api', version: '5.0.0'

	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
	testImplementation 'org.junit.jupiter:junit-jupiter-params:5.10.0'
}

test {
	useJUnitPlatform()
}

jar {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	manifest {
		attributes(
				'Class-Path': configurations.compileClasspath.collect { it.getName() }.join(' '),
				'Main-Class': 'com.template.demo.DemoHelloWorld'
		)
	}
	from { (configurations.runtimeClasspath).collect { it.isDirectory() ? it : zipTree(it) } }
	exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
}

